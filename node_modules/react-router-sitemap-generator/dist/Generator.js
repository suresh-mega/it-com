"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var fs = require('fs');

var convertor = require('xml-js');

var DEFAULT_CONFIG = {
  lastmod: new Date().toISOString().slice(0, 10),
  changefreq: 'monthly',
  priority: 0.8
};

var Generator = /*#__PURE__*/function () {
  function Generator(baseUrl, baseComponent, config) {
    _classCallCheck(this, Generator);

    if (! /*#__PURE__*/_react["default"].isValidElement(baseComponent)) {
      throw 'Invalid component. Try `Router()` instead of `Router`';
    }

    this._baseUrl = baseUrl;
    this._baseComponent = baseComponent;
    this._config = config;
  }

  _createClass(Generator, [{
    key: "getXML",
    value: function getXML() {
      var paths = componentToPaths(this._baseComponent);
      return pathsToXml(this._baseUrl, paths, this._config);
    }
  }, {
    key: "save",
    value: function save(path) {
      var paths = componentToPaths(this._baseComponent);
      var xml = pathsToXml(this._baseUrl, paths, this._config);
      fs.writeFileSync(path, xml);
    }
  }]);

  return Generator;
}();

exports["default"] = Generator;

function componentToPaths(_baseComponent) {
  var paths = [];
  var components = [_baseComponent];

  while (components.length !== 0) {
    var component = components.pop();
    if (! /*#__PURE__*/_react["default"].isValidElement(component)) continue;
    var props = component.props;
    if (props == null) continue;
    var path = props.path,
        propsComponents = props.component;

    _react["default"].Children.forEach(component.props.children, function (child) {
      components.push.apply(components, _toConsumableArray(getComponents(child)));
    });

    if (component.type.name === 'Route') {
      if (path != null) {
        paths.push(path);
      }

      if (typeof propsComponents === 'function') {
        components.push.apply(components, _toConsumableArray(getComponents(propsComponents({
          match: {
            url: path
          }
        }))));
      }
    }
  }

  return paths;
}

function getComponents(components) {
  var _components = [];

  if (Array.isArray(components)) {
    components === null || components === void 0 ? void 0 : components.forEach(function (child) {
      _components.push(child);
    });
  } else if (components != null) {
    _components.push(components);
  }

  return _components;
}

function pathsToXml(baseUrl, paths, config) {
  var _DEFAULT_CONFIG$confi = _objectSpread(_objectSpread({}, DEFAULT_CONFIG), config),
      lastmod = _DEFAULT_CONFIG$confi.lastmod,
      changefreq = _DEFAULT_CONFIG$confi.changefreq,
      priority = _DEFAULT_CONFIG$confi.priority;

  var options = {
    compact: true,
    spaces: 4
  };
  var map = {
    _declaration: {
      _attributes: {
        version: '1.0',
        encoding: 'UTF-8'
      }
    },
    urlset: {
      url: paths.map(function (path) {
        return {
          loc: baseUrl + path,
          lastmod: lastmod,
          changefreq: changefreq,
          priority: priority
        };
      }),
      _attributes: {
        xmlns: 'http://www.sitemaps.org/schemas/sitemap/0.9'
      }
    }
  };
  return convertor.js2xml(map, options);
}